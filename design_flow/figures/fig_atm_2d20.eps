%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig_atm_2d20.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 30 14:57:39 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
%  /Title (fig_atm_2d20.eps)
%  /Subject (gnuplot plot)
%  /Creator (gnuplot 4.4 patchlevel 3)
%  /Author (cpc10)
%  /Producer (gnuplot)
%  /Keywords ()
%  /CreationDate (Mon Sep 30 14:57:39 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 1 ] def
/RedA [.5 .5 ] def
/GreenA [.5 .5 ] def
/BlueA [.5 .5 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.000 UL
LTb
971 1249 M
2896 2356 L
6229 1717 M
2896 2356 L
971 1249 M
0 2214 V
2896 2356 M
0 787 V
6229 1717 M
0 1372 V
1209 1203 M
47 27 V
stroke
1146 1142 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3134 2311 M
-47 -28 V
1685 1112 M
48 27 V
stroke
1622 1051 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3609 2219 M
-46 -27 V
2162 1020 M
47 28 V
stroke
2098 960 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4086 2128 M
-48 -27 V
2638 929 M
47 27 V
stroke
2575 868 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4562 2037 M
-47 -28 V
3114 838 M
48 27 V
stroke
3051 777 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5038 1945 M
-47 -27 V
3591 746 M
46 28 V
stroke
3527 686 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5515 1854 M
-48 -27 V
4066 655 M
47 27 V
stroke
4003 594 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5991 1763 M
-47 -28 V
4304 609 M
-55 11 V
stroke
4377 586 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
971 1249 M
54 -11 V
4654 811 M
-55 10 V
stroke
4727 787 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1321 1450 M
54 -10 V
5004 1012 M
-55 10 V
stroke
5077 989 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1671 1651 M
54 -10 V
5354 1213 M
-55 11 V
stroke
5427 1190 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2021 1853 M
54 -11 V
5704 1415 M
-55 10 V
stroke
5777 1392 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2371 2054 M
54 -10 V
6054 1616 M
-54 11 V
stroke
6127 1593 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2721 2256 M
54 -11 V
971 1987 M
63 0 V
stroke
845 1987 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
971 2283 M
63 0 V
stroke
845 2283 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
971 2578 M
63 0 V
stroke
845 2578 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
971 2872 M
63 0 V
stroke
845 2872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
971 3168 M
63 0 V
stroke
845 3168 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
971 3463 M
63 0 V
stroke
845 3463 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
-282 2885 M
[ [(Helvetica) 140.0 0.0 true true 0 (Run-time \(s\))]
] -46.7 MCshow
LTb
1.000 UP
% Begin plot #1
1.000 UL
LT0
970 1986 M
167 -32 V
166 -32 V
167 -32 V
167 -32 V
166 -32 V
167 -32 V
167 -32 V
167 -32 V
166 -32 V
167 -32 V
167 -31 V
166 -32 V
167 -32 V
167 -32 V
167 -32 V
166 -32 V
167 -32 V
167 -32 V
166 -32 V
167 -32 V
1066 2044 M
167 -30 V
167 -31 V
166 -30 V
167 -31 V
167 -30 V
166 -31 V
167 -31 V
167 -30 V
167 -31 V
166 -30 V
167 -31 V
167 -30 V
166 -31 V
167 -30 V
167 -31 V
167 -30 V
166 -31 V
167 -30 V
167 -31 V
166 -30 V
1162 2102 M
167 -29 V
167 -29 V
167 -29 V
166 -29 V
167 -29 V
167 -29 V
166 -29 V
167 -29 V
167 -30 V
167 -29 V
166 -29 V
167 -29 V
167 -29 V
166 -29 V
167 -29 V
167 -29 V
166 -29 V
167 -29 V
167 -29 V
167 -29 V
1259 2160 M
166 -28 V
167 -27 V
167 -28 V
166 -28 V
167 -27 V
167 -28 V
167 -27 V
166 -28 V
167 -27 V
167 -28 V
166 -28 V
167 -27 V
167 -28 V
167 -27 V
166 -28 V
167 -28 V
167 -27 V
166 -28 V
167 -27 V
167 -28 V
1355 2218 M
167 -27 V
166 -26 V
167 -26 V
167 -26 V
166 -26 V
167 -26 V
167 -26 V
167 -26 V
166 -26 V
167 -27 V
167 -26 V
166 -26 V
167 -26 V
167 -26 V
167 -26 V
166 -26 V
167 -26 V
167 -27 V
166 -26 V
167 -26 V
stroke 4689 1695 M
1451 2275 M
167 -24 V
167 -25 V
166 -25 V
167 -24 V
167 -25 V
166 -25 V
167 -24 V
167 -25 V
167 -24 V
166 -25 V
167 -25 V
167 -24 V
166 -25 V
167 -25 V
167 -24 V
167 -25 V
166 -25 V
167 -24 V
167 -25 V
166 -25 V
1547 2333 M
167 -23 V
167 -23 V
167 -23 V
166 -24 V
167 -23 V
167 -23 V
166 -23 V
167 -23 V
167 -23 V
167 -24 V
166 -23 V
167 -23 V
167 -23 V
166 -23 V
167 -24 V
167 -23 V
166 -23 V
167 -23 V
167 -23 V
167 -23 V
1644 2391 M
166 -22 V
167 -21 V
167 -22 V
166 -22 V
167 -22 V
167 -21 V
167 -22 V
166 -22 V
167 -21 V
167 -22 V
166 -22 V
167 -22 V
167 -21 V
167 -22 V
166 -22 V
167 -21 V
167 -22 V
166 -22 V
167 -22 V
167 -21 V
1740 2449 M
167 -20 V
166 -21 V
167 -20 V
167 -20 V
166 -20 V
167 -21 V
167 -20 V
167 -20 V
166 -20 V
167 -21 V
167 -20 V
166 -20 V
167 -20 V
167 -21 V
167 -20 V
166 -20 V
167 -20 V
167 -21 V
166 -20 V
167 -20 V
1836 2507 M
167 -19 V
167 -19 V
166 -19 V
167 -18 V
167 -19 V
166 -19 V
167 -19 V
167 -19 V
167 -18 V
166 -19 V
167 -19 V
167 -19 V
166 -19 V
167 -18 V
167 -19 V
167 -19 V
166 -19 V
167 -19 V
167 -18 V
stroke 5004 2150 M
166 -19 V
1932 2565 M
167 -18 V
167 -17 V
167 -17 V
166 -18 V
167 -17 V
167 -17 V
166 -18 V
167 -17 V
167 -17 V
167 -18 V
166 -17 V
167 -17 V
167 -18 V
166 -17 V
167 -17 V
167 -18 V
166 -17 V
167 -17 V
167 -18 V
167 -17 V
2029 2622 M
166 -15 V
167 -16 V
167 -16 V
166 -16 V
167 -16 V
167 -16 V
167 -16 V
166 -15 V
167 -16 V
167 -16 V
166 -16 V
167 -16 V
167 -16 V
167 -16 V
166 -16 V
167 -15 V
167 -16 V
166 -16 V
167 -16 V
167 -16 V
2125 2680 M
167 -14 V
166 -15 V
167 -14 V
167 -14 V
166 -15 V
167 -14 V
167 -15 V
167 -14 V
166 -14 V
167 -15 V
167 -14 V
166 -15 V
167 -14 V
167 -14 V
167 -15 V
166 -14 V
167 -15 V
167 -14 V
166 -14 V
167 -15 V
2221 2738 M
167 -13 V
167 -13 V
166 -13 V
167 -13 V
167 -13 V
166 -13 V
167 -12 V
167 -13 V
167 -13 V
166 -13 V
167 -13 V
167 -13 V
166 -13 V
167 -13 V
167 -13 V
167 -13 V
166 -13 V
167 -13 V
167 -13 V
166 -13 V
2317 2796 M
167 -12 V
167 -11 V
167 -11 V
166 -12 V
167 -11 V
167 -12 V
166 -11 V
167 -12 V
167 -11 V
167 -12 V
166 -11 V
167 -12 V
167 -11 V
166 -12 V
167 -11 V
167 -12 V
166 -11 V
167 -12 V
stroke 5318 2589 M
167 -11 V
167 -11 V
2414 2854 M
166 -10 V
167 -10 V
167 -10 V
166 -10 V
167 -10 V
167 -10 V
167 -10 V
166 -10 V
167 -10 V
167 -10 V
166 -10 V
167 -10 V
167 -10 V
167 -10 V
166 -10 V
167 -10 V
167 -10 V
166 -10 V
167 -10 V
167 -10 V
2510 2912 M
167 -9 V
166 -8 V
167 -9 V
167 -9 V
166 -8 V
167 -9 V
167 -8 V
167 -9 V
166 -8 V
167 -9 V
167 -8 V
166 -9 V
167 -8 V
167 -9 V
167 -9 V
166 -8 V
167 -9 V
167 -8 V
166 -9 V
167 -8 V
2606 2969 M
167 -7 V
167 -7 V
166 -7 V
167 -7 V
167 -7 V
166 -7 V
167 -7 V
167 -7 V
167 -7 V
166 -7 V
167 -7 V
167 -7 V
166 -8 V
167 -7 V
167 -7 V
167 -7 V
166 -7 V
167 -7 V
167 -7 V
166 -7 V
2702 3027 M
167 -5 V
167 -6 V
167 -6 V
166 -5 V
167 -6 V
167 -5 V
166 -6 V
167 -6 V
167 -5 V
167 -6 V
166 -5 V
167 -6 V
167 -6 V
166 -5 V
167 -6 V
167 -6 V
166 -5 V
167 -6 V
167 -5 V
167 -6 V
2799 3085 M
166 -4 V
167 -4 V
167 -4 V
166 -4 V
167 -5 V
167 -4 V
167 -4 V
166 -4 V
167 -4 V
167 -4 V
166 -5 V
167 -4 V
167 -4 V
167 -4 V
166 -4 V
167 -4 V
167 -4 V
stroke 5633 3015 M
166 -5 V
167 -4 V
167 -4 V
2895 3143 M
167 -3 V
166 -2 V
167 -3 V
167 -3 V
166 -2 V
167 -3 V
167 -3 V
167 -3 V
166 -2 V
167 -3 V
167 -3 V
166 -2 V
167 -3 V
167 -3 V
167 -2 V
166 -3 V
167 -3 V
167 -2 V
166 -3 V
167 -3 V
970 1986 M
96 58 V
96 58 V
97 58 V
96 58 V
96 57 V
96 58 V
97 58 V
96 58 V
96 58 V
96 58 V
97 57 V
96 58 V
96 58 V
96 58 V
97 58 V
96 58 V
96 57 V
96 58 V
97 58 V
96 58 V
1137 1954 M
96 60 V
96 59 V
96 59 V
97 59 V
96 60 V
96 59 V
96 59 V
97 60 V
96 59 V
96 59 V
96 60 V
97 59 V
96 59 V
96 59 V
96 60 V
97 59 V
96 59 V
96 60 V
96 59 V
97 59 V
1303 1922 M
97 61 V
96 61 V
96 61 V
96 60 V
97 61 V
96 61 V
96 61 V
96 60 V
97 61 V
96 61 V
96 61 V
96 60 V
97 61 V
96 61 V
96 61 V
96 61 V
97 60 V
96 61 V
96 61 V
96 61 V
1470 1890 M
96 63 V
97 62 V
96 62 V
96 62 V
96 62 V
97 63 V
96 62 V
96 62 V
96 62 V
97 63 V
96 62 V
96 62 V
96 62 V
97 63 V
96 62 V
96 62 V
stroke 3010 2886 M
96 62 V
97 62 V
96 63 V
96 62 V
1637 1858 M
96 64 V
96 64 V
96 63 V
97 64 V
96 64 V
96 63 V
96 64 V
97 64 V
96 64 V
96 63 V
96 64 V
97 64 V
96 63 V
96 64 V
96 64 V
97 63 V
96 64 V
96 64 V
96 64 V
97 63 V
1803 1826 M
97 66 V
96 65 V
96 65 V
96 65 V
97 65 V
96 65 V
96 65 V
96 66 V
97 65 V
96 65 V
96 65 V
96 65 V
97 65 V
96 66 V
96 65 V
96 65 V
97 65 V
96 65 V
96 65 V
96 66 V
1970 1794 M
96 67 V
97 67 V
96 66 V
96 67 V
96 66 V
97 67 V
96 67 V
96 66 V
96 67 V
97 67 V
96 66 V
96 67 V
96 66 V
97 67 V
96 67 V
96 66 V
96 67 V
97 67 V
96 66 V
96 67 V
2137 1762 M
96 68 V
96 69 V
97 68 V
96 68 V
96 68 V
96 68 V
97 68 V
96 68 V
96 68 V
96 68 V
97 68 V
96 68 V
96 69 V
96 68 V
97 68 V
96 68 V
96 68 V
96 68 V
97 68 V
96 68 V
2304 1730 M
96 70 V
96 70 V
96 69 V
97 70 V
96 69 V
96 70 V
96 69 V
97 70 V
96 69 V
96 70 V
96 70 V
97 69 V
96 70 V
96 69 V
96 70 V
stroke 3747 2774 M
97 69 V
96 70 V
96 69 V
96 70 V
97 69 V
2470 1698 M
97 71 V
96 71 V
96 72 V
96 71 V
97 71 V
96 71 V
96 71 V
96 71 V
97 71 V
96 71 V
96 71 V
96 71 V
97 71 V
96 71 V
96 71 V
96 71 V
97 71 V
96 71 V
96 71 V
96 71 V
2637 1666 M
96 73 V
97 72 V
96 73 V
96 72 V
96 73 V
97 72 V
96 73 V
96 72 V
96 73 V
97 72 V
96 73 V
96 72 V
96 73 V
97 72 V
96 73 V
96 72 V
96 73 V
97 72 V
96 73 V
96 72 V
2804 1635 M
96 73 V
96 74 V
96 74 V
97 74 V
96 74 V
96 74 V
96 74 V
97 74 V
96 74 V
96 74 V
96 74 V
97 74 V
96 74 V
96 74 V
96 74 V
97 74 V
96 74 V
96 74 V
96 73 V
97 74 V
2970 1603 M
97 75 V
96 75 V
96 76 V
96 75 V
97 76 V
96 75 V
96 75 V
96 76 V
97 75 V
96 76 V
96 75 V
96 75 V
97 76 V
96 75 V
96 76 V
96 75 V
97 76 V
96 75 V
96 75 V
96 76 V
3137 1571 M
96 76 V
97 77 V
96 77 V
96 77 V
96 77 V
97 77 V
96 77 V
96 77 V
96 76 V
97 77 V
96 77 V
96 77 V
96 77 V
97 77 V
stroke 4485 2647 M
96 77 V
96 77 V
96 76 V
97 77 V
96 77 V
96 77 V
3304 1539 M
96 78 V
96 78 V
97 79 V
96 78 V
96 78 V
96 79 V
97 78 V
96 78 V
96 79 V
96 78 V
97 78 V
96 79 V
96 78 V
96 78 V
97 79 V
96 78 V
96 78 V
96 79 V
97 78 V
96 78 V
3471 1507 M
96 79 V
96 80 V
96 80 V
97 80 V
96 80 V
96 79 V
96 80 V
97 80 V
96 80 V
96 80 V
96 79 V
97 80 V
96 80 V
96 80 V
96 80 V
97 79 V
96 80 V
96 80 V
96 80 V
97 80 V
3637 1475 M
97 81 V
96 81 V
96 81 V
96 82 V
97 81 V
96 81 V
96 82 V
96 81 V
97 81 V
96 81 V
96 82 V
96 81 V
97 81 V
96 81 V
96 82 V
96 81 V
97 81 V
96 81 V
96 82 V
96 81 V
3804 1443 M
96 82 V
96 83 V
97 83 V
96 83 V
96 82 V
96 83 V
97 83 V
96 83 V
96 82 V
96 83 V
97 83 V
96 82 V
96 83 V
96 83 V
97 83 V
96 82 V
96 83 V
96 83 V
97 83 V
96 82 V
3971 1411 M
96 84 V
96 84 V
96 84 V
97 84 V
96 85 V
96 84 V
96 84 V
97 84 V
96 84 V
96 85 V
96 84 V
97 84 V
96 84 V
stroke 5222 2505 M
96 84 V
96 85 V
97 84 V
96 84 V
96 84 V
96 84 V
97 85 V
4137 1379 M
97 85 V
96 86 V
96 86 V
96 85 V
97 86 V
96 86 V
96 85 V
96 86 V
97 86 V
96 85 V
96 86 V
96 86 V
97 85 V
96 86 V
96 86 V
96 85 V
97 86 V
96 86 V
96 85 V
96 86 V
4304 1347 M
96 87 V
97 87 V
96 87 V
96 87 V
96 87 V
97 88 V
96 87 V
96 87 V
96 87 V
97 87 V
96 87 V
96 87 V
96 87 V
97 88 V
96 87 V
96 87 V
96 87 V
97 87 V
96 87 V
96 87 V
% End plot #1
% Begin plot #2
stroke
LT1
%pm3d_map_begin
.0935 g 2895 3143 N 97 59 166 -4 -96 -58 h
.0887 g 2799 3085 N 96 59 167 -5 -97 -58 h
.0839 g 2702 3027 N 96 60 167 -7 -96 -58 h
.0791 g 2606 2969 N 96 59 167 -9 -96 -57 h
.0743 g 2510 2912 N 97 59 166 -10 -96 -58 h
.0695 g 2414 2854 N 96 60 167 -12 -97 -58 h
.0647 g 2317 2796 N 96 59 167 -13 -96 -58 h
.0599 g 2221 2738 N 96 59 167 -14 -96 -58 h
.0551 g 2125 2680 N 97 59 166 -15 -96 -58 h
.0503 g 2029 2622 N 96 60 167 -18 -97 -57 h
.0456 g 1932 2565 N 96 59 167 -19 -96 -58 h
.0408 g 1836 2507 N 96 59 167 -20 -96 -58 h
.0595 g 2003 2488 N 97 61 166 -21 -96 -59 h
.036 g 1740 2449 N 97 60 166 -22 -96 -58 h
.0525 g 1907 2429 N 96 60 167 -21 -97 -60 h
.0312 g 1644 2391 N 96 59 167 -23 -97 -58 h
.0455 g 1810 2369 N 96 61 167 -23 -96 -59 h
.0598 g 1977 2348 N 96 62 167 -23 -96 -61 h
.0264 g 1547 2333 N 96 59 167 -24 -96 -58 h
.0385 g 1714 2310 N 96 61 167 -25 -96 -59 h
.0506 g 1881 2287 N 97 63 166 -25 -96 -61 h
.0216 g 1451 2275 N 96 60 167 -27 -96 -57 h
.0315 g 1618 2251 N 97 61 166 -26 -96 -60 h
.0414 g 1785 2226 N 96 62 167 -26 -97 -61 h
.0513 g 1951 2201 N 96 64 167 -26 -96 -62 h
.0168 g 1355 2218 N 97 59 166 -28 -96 -58 h
.0245 g 1522 2191 N 96 60 167 -27 -97 -59 h
.0322 g 1688 2165 N 96 62 167 -28 -96 -60 h
.0399 g 1855 2139 N 97 64 166 -28 -96 -62 h
.0477 g 2022 2113 N 96 65 167 -27 -97 -64 h
.0554 g 2188 2087 N 96 67 167 -28 -96 -65 h
.012 g 1259 2160 N 96 59 167 -29 -97 -58 h
.0175 g 1425 2132 N 96 61 167 -29 -96 -59 h
.023 g 1592 2105 N 96 62 167 -29 -96 -61 h
.0285 g 1759 2077 N 96 63 166 -29 -96 -62 h
.034 g 1925 2049 N 96 65 167 -29 -96 -63 h
.0396 g 2092 2022 N 96 66 167 -29 -96 -65 h
.0451 g 2259 1994 N 97 68 166 -29 -96 -66 h
.0506 g 2426 1967 N 96 69 167 -29 -97 -68 h
.0561 g 2592 1939 N 96 72 167 -30 -96 -69 h
.0616 g 2759 1912 N 96 73 167 -29 -96 -72 h
.0671 g 2926 1884 N 96 74 166 -29 -96 -73 h
.0726 g 3092 1856 N 96 76 167 -29 -96 -74 h
.0781 g 3259 1829 N 96 77 167 -29 -96 -76 h
.0837 g 3426 1801 N 97 79 166 -29 -96 -77 h
.0892 g 3593 1774 N 96 80 167 -29 -97 -79 h
.0947 g 3759 1746 N 96 81 167 -29 -96 -80 h
.1002 g 3926 1718 N 97 83 166 -29 -96 -81 h
.1057 g 4093 1691 N 96 84 167 -29 -97 -83 h
.1112 g 4259 1663 N 96 86 167 -29 -96 -84 h
.1167 g 4426 1636 N 96 87 167 -29 -96 -86 h
.0072 g 1162 2102 N 96 59 167 -30 -96 -58 h
.0105 g 1329 2073 N 96 61 167 -31 -96 -59 h
.0138 g 1496 2044 N 97 62 166 -30 -96 -61 h
.0171 g 1663 2015 N 96 64 167 -31 -97 -62 h
.0204 g 1829 1986 N 96 65 167 -30 -96 -64 h
.0237 g 1996 1957 N 97 67 166 -31 -96 -65 h
.0271 g 2163 1928 N 96 69 167 -31 -97 -67 h
.0304 g 2329 1899 N 96 70 167 -30 -96 -69 h
.0337 g 2496 1870 N 96 71 167 -31 -96 -70 h
.037 g 2663 1840 N 97 72 166 -30 -96 -71 h
.0403 g 2830 1811 N 96 74 167 -31 -97 -72 h
.0436 g 2996 1782 N 96 75 167 -30 -96 -74 h
.0469 g 3163 1753 N 97 77 166 -31 -96 -75 h
.0502 g 3330 1724 N 96 78 167 -30 -97 -77 h
.0535 g 3496 1695 N 96 80 167 -31 -96 -78 h
.0568 g 3663 1666 N 96 81 167 -30 -96 -80 h
.0601 g 3830 1637 N 96 83 166 -31 -96 -81 h
.0635 g 3996 1608 N 96 84 167 -30 -96 -83 h
.0668 g 4163 1579 N 96 86 167 -31 -96 -84 h
.0701 g 4330 1550 N 97 87 166 -30 -96 -86 h
.0024 g 1066 2044 N 96 60 167 -32 -96 -58 h
.0035 g 1233 2014 N 97 61 166 -32 -96 -60 h
.0046 g 1400 1983 N 96 63 167 -32 -97 -61 h
.0057 g 1566 1953 N 96 64 167 -32 -96 -63 h
.0068 g 1733 1922 N 97 66 166 -32 -96 -64 h
.0079 g 1900 1892 N 96 67 167 -32 -97 -66 h
.009 g 2066 1861 N 96 68 167 -32 -96 -67 h
.0101 g 2233 1830 N 96 70 167 -32 -96 -68 h
.0113 g 2400 1800 N 97 71 166 -32 -96 -70 h
.0124 g 2567 1769 N 96 73 167 -32 -97 -71 h
.0135 g 2733 1739 N 96 73 167 -31 -96 -73 h
.0146 g 2900 1708 N 97 75 166 -32 -96 -73 h
.0157 g 3067 1678 N 96 76 167 -32 -97 -75 h
.0168 g 3233 1647 N 96 78 167 -32 -96 -76 h
.0179 g 3400 1617 N 96 79 167 -32 -96 -78 h
.019 g 3567 1586 N 97 81 166 -32 -96 -79 h
.0201 g 3734 1556 N 96 82 167 -32 -97 -81 h
.0212 g 3900 1525 N 96 84 167 -32 -96 -82 h
.0223 g 4067 1495 N 97 85 166 -32 -96 -84 h
.0234 g 4234 1464 N 96 87 167 -32 -97 -85 h
%pm3d_map_end
% End plot #2
% Begin plot #3
1.000 UL
LT1
%pm3d_map_begin
.7381 g 5396 3103 N 96 81 167 -4 -97 -80 h
.781 g 5562 3100 N 96 82 167 -4 -96 -81 h
.824 g 5729 3097 N 97 85 166 -5 -96 -82 h
.867 g 5896 3095 N 96 86 167 -4 -97 -85 h
.91 g 6062 3092 N 96 87 167 -4 -96 -86 h
.741 g 5466 3019 N 97 83 166 -5 -96 -82 h
.7818 g 5633 3015 N 96 84 167 -6 -97 -83 h
.8225 g 5799 3010 N 96 85 167 -5 -96 -84 h
.8633 g 5966 3006 N 96 87 167 -6 -96 -85 h
.7395 g 5536 2932 N 96 84 167 -7 -96 -83 h
.7781 g 5703 2926 N 96 86 167 -7 -96 -84 h
.8166 g 5870 2921 N 97 87 166 -7 -96 -86 h
.7336 g 5607 2842 N 97 86 166 -9 -96 -84 h
.77 g 5774 2835 N 96 87 167 -8 -97 -86 h
.7233 g 5677 2749 N 96 87 167 -10 -96 -85 h
%pm3d_map_end
% End plot #3
1.000 UL
LTb
6229 1717 M
4304 609 L
971 1249 M
4304 609 L
0 739 V
stroke
LCb setrgbcolor
1906 373 M
[ [(Helvetica) 140.0 0.0 true true 0 (Horizon length H)]
] -46.7 MCshow
LTb
LCb setrgbcolor
6268 864 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of particles Np)]
] -46.7 MCshow
LTb
LCb setrgbcolor
-282 2885 M
[ [(Helvetica) 140.0 0.0 true true 0 (Run-time \(s\))]
] -46.7 MCshow
LTb
1.000 UP
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
